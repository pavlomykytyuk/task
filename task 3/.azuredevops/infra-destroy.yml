# trigger:
#   branches:
#     include:
#     - main
#   paths:
#     include:
#       - infra/**
      
pool:
  name: Azure Pipelines
  
parameters:
  - name: workingDirectory
    type: string
    default: "./infra/terraform"

variables:
  - name: terraformVersion
    value: "1.10.3"
  - name: artifactName
    value: "terraform_plan"
  - group: "terraform-azure-devops"

stages:
- stage: CI
  displayName: "Terraform CI"
  jobs:
  - job: terraformLint
    displayName: "Terraform Lint"
    steps:
      - script: |
          terraform fmt -recursive
        displayName: "Terraform Format Check"
        workingDirectory: ${{parameters.workingDirectory}}

  - job: terraformCI
    displayName: "Validate CI"
    dependsOn: terraformLint
    steps:          
      - script: |
          terraform init
        displayName: "Terraform Init"
        workingDirectory: ${{parameters.workingDirectory}}
        env:
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)

      - script: |
          terraform validate
        displayName: "Terraform Validate"
        workingDirectory: ${{parameters.workingDirectory}}

      - script: |
          terraform plan -out=terraform_plan -input=false
        displayName: "Terraform Plan"
        workingDirectory: ${{parameters.workingDirectory}}
        env:
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(Build.SourcesDirectory)
          artifactName: $(artifactName)
          displayName: "Publish plan"
      
- stage: deployment
  displayName: "Deploy Infra"
  jobs:
  - job: infraDeployment
    displayName: "Infra destroy"
    steps:      
      - download: current
        artifact: $(artifactName)
        displayName: "Download $(artifactName) artifact"
      
      - script: |
          az login --service-principal \
          --username $(clientId) \
          --password $(clientSecret) \
          --tenant $(tenantId)
          az account show
        displayName: "Azure CLI Login"

      - script: |
          chmod -R a+x .terraform/providers/
          terraform destroy -auto-approve
        displayName: "Terraform Destroy"
        workingDirectory: $(Pipeline.Workspace)/$(artifactName)/${{parameters.workingDirectory}}
        env:
          ARM_SUBSCRIPTION_ID: $(subscriptionId)
          ARM_TENANT_ID: $(tenantId)
          ARM_CLIENT_ID: $(clientId)
          ARM_CLIENT_SECRET: $(clientSecret)